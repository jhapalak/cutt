=============
API Reference
=============

Like all good command line scripts, ``cutt`` also exposes an API for
programmatic access. The functions forming this API are mostly
similar to their command line counterparts. Slight differences exist,
however,  since the command line interface doesn't always make sense
as an API, nor is it always as testable.

The Functions
=============

.. function:: cutt.cutt(args=None)

	Executes the program with the given command line arguments as if
	they were passed via the command prompt.

	*args:* A list of strings; the command line arguments. Defaults
	to ``None``, in which case ``sys.argv`` is appropriately used.

	For example, the following function call:

	::

		>>> cutt.cutt(['--help'])

	is equivalent to the following command line:

	::

		$ python -m cutt --help


.. function:: cutt.timetable(raw_data, courseinfo=None)

	Returns a timetable as a two-dimensional list of strings. Its
	structure is as follows:

	::

		[['Timings', 'Mon', 'Tue', ...],
		 ['10:00-10:45', 'coursename-1', 'coursename-2', ...],
		 ['11:00-11:45', 'coursename-3', 'coursename-1', ...],
		 ...]

	*raw_data:* The contents of the CSV file downloaded from the
	university's website (CUIMS) but after the file object is passed
	through ``list(csv.reader())``.

	*courseinfo:* A dictionary of ``course-id, course-name`` pairs.
	Defaults to ``None``, in which case the coursenames are extracted
	from the previous argument ``raw_data``.

.. function:: cutt.cmd_courseinfo(fileorpath_timetable, fileorpath_output=None, \
					interactive=False)

	Writes course-related information to a JSON file.

	*fileorpath_timetable:* :ref:`Description below. <common-arg-timetable>`

	*fileorpath_output:* The file to write the course-related information to.
	Defaults to ``None`` in which case, a default file path is used.

	*interactive:* A boolean denoting whether or not to prompt the user to
	enter alternate coursenames. Defaults to ``False``, in which case the
	default course names are extracted from ``fileorpath_timetable``.

.. function:: cutt.cmd_csv(fileorpath_timetable, fileorpath_courseinfo, \
				fileorpath_output)

	Writes the timetable returned by ``cutt.timetable`` to a CSV file.

	*fileorpath_timetable:* :ref:`Description below. <common-arg-timetable>`

	*fileorpath_courseinfo:* :ref:`Description below. <common-arg-courseinfo>`

	*fileorpath_output:* The file to write the CSV data to. Can be a text
	stream opened for writing, or a file path. If a file path is given, it
	will be opened for writing, clearing its previous contents.

.. function:: cutt.cmd_gsheet(fileorpath_timetable, fileorpath_courseinfo, \
				fileorpath_token, fileorpath_credentials, \
				title=None, plain=False)

	Creates a Google Sheet containing the timetable and returns the
	spreadsheet ID. For more on spreadsheet IDs, read Google's documentation
	`here. <https://developers.google.com/sheets/api/guides/concepts#spreadsheet_id>`_

	*fileorpath_timetable:* :ref:`Description below. <common-arg-timetable>`

	*fileorpath_courseinfo:* :ref:`Description below. <common-arg-courseinfo>`

	*fileorpath_token:* The Google login token (``.pickle``). Can be a binary stream
	opened in ``r+b`` mode, or a file path.

	*fileorpath_credentials:* The Google API token. Can be a text stream opened for
	reading, or a file path.

	*title:* A string; title of the Google Sheet. Defaults to a timestamped title
	of the form ``cutt-<timestamp>``.

	*plain:* A boolean denoting whether or not to create an unformatted Google Sheet.
	Defaults to ``False``, i.e., the sheets are formatted by default.

Common Arguments
================

.. _common-arg-timetable:

``fileorpath_timetable``
------------------------
The CSV file downloaded from the university's website (CUIMS). Can be a text
stream opened for reading, or a file path.

.. _common-arg-courseinfo:

``fileorpath_courseinfo``
-------------------------
The JSON courseinfo file generated by ``cutt courseinfo`` command. Can be a text
stream opened for reading, or a file path.
